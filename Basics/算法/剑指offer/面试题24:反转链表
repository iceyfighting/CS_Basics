/*
定义三个指针left、center、right。从链表头结点开始遍历，遍历到尾节点时输出即可。看似简单其实是需要仔细理解的。
*/

#include<iostream>
   using namespace std;
   
   struct ListNode{
        int val;
        struct ListNode *next;
        ListNode(int x):
                val(x),next(NULL){}
   };
  
  class Solution{
          public:
                  ListNode* create(){
                         ListNode *p,*head,*tail;
                         head = tail = NULL;
  
                         for(int i = 0;i<7;i++){
                             p = new ListNode(i);
  
                             if(!head){
                                head = p;
                            }
                             else{
                               tail->next = p;
                             }
                             tail = p;
                         }
                         return head;
                  }
  
                  void print_Node(ListNode *head){
                       while(head){
                            cout<<head->val<<" ";
                            head = head->next;
                       }
                       cout<<endl;
                 }
  
                  ListNode* ReverseList(ListNode* pHead){
                      ListNode *left = NULL;
                     ListNode *center = NULL;
                      ListNode *right = NULL;
  
                     if(!pHead){
                          return NULL;
                      }
  
                      center = pHead;
                      while(center){//节点不为空
                          right = center->next;//节点往右移动
                          //center->next = left;//
                          left = center;
                          center = right;
                      }
                      return left;
  
                  }
  };
  
  int main(){
     Solution ss;
     ListNode *head = NULL;
      head = ss.create();
      ss.print_Node(head);
      head = ss.ReverseList(head);
      cout<<head->val<<endl;
      //ss.print_Node(head);
  }

