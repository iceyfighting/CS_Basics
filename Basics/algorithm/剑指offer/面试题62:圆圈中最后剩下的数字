#include<iostream>
#include<list>
using namespace std;

class Solution{
    public:
        int lastRemain(int n,int m)
        {
            if(n<1 || m<1)
            {
                return -1;
            }
            list<int> circle;
            for(int i = 0;i<n;i++)
            {
                circle.push_back(i);
            }

            list<int>::iterator current = circle.begin();
            list<int>::iterator next;
            while(circle.size()>1)
            {
                for(int k=1;k<m;k++)
                {
                    current++;
                    if(current == circle.end())
                    {
                        current = circle.begin();
                    }
                }
                current++;
                next = current;
                if(next == circle.end())
                {
                    next = circle.begin();
                }
                current--;
                circle.erase(current);
                current = next;
            }
            return *current;
        }
        int lastRemain_2(int n,int m)
        {
            if(n<1 || m<1)
            {
                return -1;
            }
            int last = 0;
            for(int i =2;i<=n;i++)
            {
                last = (last+m)%i;
            }
            return last;
        }
};

int main()
{
    Solution ss;
    int n = 5;
    int m = 3;
    //int result = ss.lastRemain(n,m);
    int result = ss.lastRemain_2(n,m);
    cout << result << endl;
}

