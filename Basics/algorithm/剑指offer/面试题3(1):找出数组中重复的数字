#include<iostream>
using namespace std;

class Solution
{
    public:
        //先排序后判断
        int duplicate(int *a,int length,int *dup)
        {
            
			if(*a == NULL || length <0)
            {
                return false;
            }
            for(int i =0;i<length;i++)
            {
                if(a[i]<0 || a[i]>length-1)
                {
                    return false;
                }
            }
			
			for(int i = 0;i<length-1;i++)
            {
                for(int j = i+1;j<length;j++)
                {
                    if(a[i]>a[j])
                    {
                        int temp = a[i];
                        a[i] = a[j];
                        a[j] = temp;
                    }
                }
            }

            for(int i = 0;i<length-1;i++)
            {
                if(a[i] == a[i+1])
                {
                    *dup = a[i];
                    return true;
                }
            }
            return false;
        }
        //利用下标
        int duplicate_1(int *a,int length,int *dup)
        {
            if(*a == NULL || length <0)
            {
                return false;
            }
            for(int i =0;i<length;i++)
            {
                if(a[i]<0 || a[i]>length-1)
                {
                    return false;
                }
            }

            for(int i = 0;i<length;++i)
            {
                while(a[i] != i)
                {
                    if(a[i] == a[a[i]])
                    {
                        *dup = a[i];
                        return true;
                    }
                    int temp = a[i];
                    a[i] = a[temp];
                    a[temp] = temp;
                }
            }
            return false;
        }
        //STL 中map方式
        bool deplicate_2(int *a,int length,int *dup)
        {
            map<int,int> map_dup;
            for(int i = 0;i<length;i++)
            {
                if(map_dup.find(a[i]) != map_dup.end())
                {
                    *dup = a[i];
                    return true;
                }
                else
                {//若没有出现过，则加1
                    map_dup[a[i]] = 1;
                }
            }
			return false;
        }
};

int main()
{
    Solution ss;
    int a[] = {2,1,3,1,4};
    int length = 5;
    int dup = 0;
    if(ss.duplicate(a,length,&dup))
    {
        cout << "Yes:" << dup << endl;
    }
    else
    {
        cout << "No" << endl;
    }
}
