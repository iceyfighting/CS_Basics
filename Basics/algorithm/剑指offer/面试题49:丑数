#include<iostream>
using namespace std;

class Solution{
    public:
        
        int Min(int number1,int number2,int number3)
        {
            int min = (number1 < number2)?number1:number2;
            min = (min<number3)?min:number3;
            return min;
        }
        int GetUglyNumber(int index)
        {
            if(index <= 0)
            {
                return 0;
            }

            int *pUglyNumbers = new int[index];
            pUglyNumbers[0] = 1;
            int nextUglyIndex = 1;

            int *pMultiply2 = pUglyNumbers;
            int *pMultiply3 = pUglyNumbers;
            int *pMultiply5 = pUglyNumbers;

            while(nextUglyIndex < index)
            {
                int min = Min(*pMultiply2*2,*pMultiply3*3,*pMultiply5*5);
                pUglyNumbers[nextUglyIndex] = min;
                cout << "pUglyNumbers[" << nextUglyIndex << "] =" << min;
                cout << " " <<*pMultiply2 << *pMultiply3 << *pMultiply5 << endl;
                while(*pMultiply2*2 <= pUglyNumbers[nextUglyIndex])
                {
                    ++pMultiply2;
                    if(*pMultiply2 == 7)
                    {
                        cout << "è¾“å‡º7" <<endl;
                    }
                }

                while(*pMultiply3*3 <= pUglyNumbers[nextUglyIndex])
                {
                    ++pMultiply3;
                }

                while(*pMultiply5*5 <= pUglyNumbers[nextUglyIndex])
                {
                    ++pMultiply5;
                }
                ++nextUglyIndex;
            }
            int ugly = pUglyNumbers[nextUglyIndex-1];
            delete[] pUglyNumbers;
            return ugly;
        }
};

int main()
{
    Solution ss;
    cout << ss.GetUglyNumber(15) << endl;
}
